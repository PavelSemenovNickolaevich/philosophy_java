1. Создайте функцию, которая делает бэкап таблицы customers (копирует все данные в другую таблицу), предварительно стирая таблицу для бэкапа, если такая уже существует (чтобы в случае многократного запуска таблица для бэкапа перезатиралась).

2. Создать функцию, которая возвращает средний фрахт (freight) по всем заказам

3. Написать функцию, которая принимает два целочисленных параметра, используемых как нижняя и верхняя границы для генерации случайного числа в пределах этой границы (включая сами граничные значения).

Функция random генерирует вещественное число от 0 до 1.

Необходимо вычислить разницу между границами и прибавить единицу.

На полученное число умножить результат функции random() и прибавить к результату значение нижней границы.

Применить функцию floor() к конечному результату, чтобы не "уехать" за границу и получить целое число.

Перед выполнением заданий 4-9, загрузить скрипт по ссылке: https://1drv.ms/u/s!AqtQeAOHZEjQvLgOEzFOSRxVzHJn8Q?e=KloNsI и исполнить его, создав подключение к БД Northwind. Этот скрипт добавляет столбец salary в таблицу employees.

4. Создать функцию, которая возвращает самые низкую и высокую зарплаты среди сотрудников заданного города

5. Создать функцию, которая корректирует зарплату на заданный процент,  но не корректирует зарплату, если её уровень превышает заданный уровень при этом верхний уровень зарплаты по умолчанию равен 70, а процент коррекции равен 15%.

6. Модифицировать функцию, корректирующую зарплату таким образом, чтобы в результате коррекции, она так же выводила бы изменённые записи.

7. Модифицировать предыдущую функцию так, чтобы она возвращала только колонки last_name, first_name, title, salary

8. Написать функцию, которая принимает метод доставки и возвращает записи из таблицы orders в которых freight меньше значения, определяемого по следующему алгоритму:

- ищем максимум фрахта (freight) среди заказов по заданному методу доставки

- корректируем найденный максимум на 30% в сторону понижения

- вычисляем среднее значение фрахта среди заказов по заданному методу доставки

- вычисляем среднее значение между средним найденным на предыдущем шаге и скорректированным максимумом

- возвращаем все заказы в которых значение фрахта меньше найденного на предыдущем шаге среднего

9. Написать функцию, которая принимает:

уровень зарплаты, максимальную зарплату (по умолчанию 80) минимальную зарплату (по умолчанию 30), коээфициент роста зарплаты (по умолчанию 20%)

Если зарплата выше минимальной, то возвращает false

Если зарплата ниже минимальной, то увеличивает зарплату на коэффициент роста и проверяет не станет ли зарплата после повышения превышать максимальную.

Если превысит - возвращает false, в противном случае true.

Проверить реализацию, передавая следующие параметры

(где c - уровень з/п, max - макс. уровень з/п, min - минимальный уровень з/п, r - коэффициент):

c = 40, max = 80, min = 30, r = 0.2 - должна вернуть false

c = 79, max = 81, min = 80, r = 0.2 - должна вернуть false

c = 79, max = 95, min = 80, r = 0.2 - должна вернуть true




\ALTER TABLE employees
 ADD COLUMN salary numeric(12,2);

 UPDATE employees
 SET salary=64.47
 WHERE employee_id=1;

 UPDATE employees
 SET salary=52.42
 WHERE employee_id=2;

 UPDATE employees
 SET salary=78.47
 WHERE employee_id=3;

 UPDATE employees
 SET salary=62.95
 WHERE employee_id=4;

 UPDATE employees
 SET salary=55.56
 WHERE employee_id=5;

 UPDATE employees
 SET salary=54.92
 WHERE employee_id=6;

 UPDATE employees
 SET salary=64.35
 WHERE employee_id=7;

 UPDATE employees
 SET salary=75.60
 WHERE employee_id=8;

 UPDATE employees
 SET salary=0.00
 WHERE employee_id=9;
 SELECT employee_id, salary FROM employees
 order by employee_id
